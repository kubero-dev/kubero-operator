# Default values for kubero.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/kubero-dev/kubero/kubero
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.10"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 2000

registry:
  enabled: false  # creates registry credentials for a external or a local registry (required for build strategy apps)
  create: false   # spins up a local registry
  #host: registry.kubero.svc.cluster.local  # works for pushes, but not for pulls. DO NOT USE THIS :( since it requires to configure all nodes ot acceppt this "insecure" registry
  #host: docker.io                          # requires a docker account. Might be the best choice when running on a non public domain
  host: registry.demo.kubero.dev            # will make your images publicly avaialble with a basic auth protection
  account:
    # create account with:
    # docker run --entrypoint htpasswd httpd:2 -Bbn [username] [password]
    # http://aspirine.org/htpasswd_en.html (use bcrypt)
    username: kubero
    password: kubero
    hash: $2y$05$czQZpvtDYc5OzM/1r1pH0eAplT/okohh/mXoWl/Y65ZP/8/jnSWZq
  port: 443
  storage: 1Gi
  storageClassName:

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost.kubero.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: kubero-tls
  #    hosts:
  #      - localhost.kubero.dev

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

kubero:
  debug: ""
  namespace: kubero
  context: inClusterContext
  webhook_url: https://localhost.kubero.dev/api/webhook
  #sessionKey: "randomString"
  auth:
    github:
      enabled: false
      id: ""
      secret: ""
      callbackUrl: ""
      org: ""
    oauth2:
      enabled: false
      name: ""
      id: ""
      authUrl: ""
      tokenUrl: ""
      secret: ""
      callbackUrl: ""

  config: |
    kubero:
      readonly: false
      banner:
        show: false
        message: "Welcome to Kubero!"
        bgcolor: "#8560A9"
        fontcolor: "azure"
    buildpacks:
      - name: NodeJS
        language: JavaScript
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: node
          tag: latest
          command: "npm install"
          securityContext:
            runAsUser: 1000
        run:
          repository: node
          tag: latest
          command: "node index.js"
      - name: PHP
        language: PHP
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: composer
          tag: latest
          command: "composer install; chown -R 1000:1000 /app"
        run:
          repository: webdevops/php-apache
          tag: "8.1"
          readOnlyAppStorage: false
          securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
          command: "apache2-foreground"
      - name: Python
        language: Python
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: python
          tag: 3.10-buster
          command: "python3 -m venv .venv && . .venv/bin/activate && pip install -r requirements.txt"
        run:
          repository: python
          tag: 3.10-buster
          command: ". .venv/bin/activate && python3 main.py"
      - name: GoLang
        language: GoLang
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: golang
          tag: alpine
          command: "go mod download && go mod verify && go build -v -o app"
        run:
          repository: golang
          tag: alpine
          command: "./app"
      - name: Hugo
        language: GoLang
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: klakegg/hugo
          tag: latest
          command: hugo -D
        run:
          repository: caddy
          tag: latest
          command: caddy file-server --listen :8080 --root /app/public
      - name: Ruby
        language: Ruby
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: ruby
          tag: "2.7"
          command: "export GEM_HOME=/app/bundle; bundle install --jobs=4 --retry=3"
        run:
          repository: ruby
          tag: "2.7"
          command: "export GEM_HOME=/app/bundle; bundle exec ruby main.rb"
      - name: Static
        language: HTML
        fetch:
          repository: ghcr.io/kubero-dev/buildpacks/fetch
          tag: v1.2
          securityContext:
            runAsUser: 1000
        build:
          repository: busybox
          tag: latest
          command: "echo 'Buildpack not required'"
        run:
          repository: caddy
          tag: latest
          command: caddy file-server --listen :8080 --root /app
    podSizeList:
    - name: small
      description: 'Small (CPU: 0.25, Memory: 0.5Gi)'
      default: true
      resources:
        requests:
          memory: 0.5Gi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 500m
    - name: medium
      description: 'Medium (CPU: 1, Memory: 2Gi)'
      resources:
        requests:
          memory: 2Gi
          cpu: 1000m
        limits:
          memory: 4Gi
          cpu: 2000m
    - name: large
      description: 'Large (CPU: 2, Memory: 4Gi)'
      active: false
      resources:
        requests:
          memory: 4Gi
          cpu: 2000m

cloudflared:
  enabled: false
  ## @param image.repository The Docker repository to pull the image from.
  ## @param image.tag The image tag to use.
  ## @param image.imagePullPolicy The logic of image pulling.
  ##
  image:
    repository: cloudflare/cloudflared
    tag: "2023.8.2"
    imagePullPolicy: IfNotPresent

  ## @section Deployment parameters

  ## @param replicaCount The number of replicas to deploy.
  ##
  replicaCount: 3
  ## @param tunnelID The Argo Tunnel ID you created. Check the configuration section for details.
  ##
  tunnelID: ""
  ## @param auth.accountTag The Argo tunnel account tag.
  ## @param auth.tunnelName The Argo tunnel name.
  ## @param auth.tunnelSecret The Argo tunnel secret.
  ##
  auth:
    accountTag: ""
    tunnelName: ""
    tunnelSecret: ""
  ## @param existingSecret The name of an existing secret containing the Argo tunnel settings.
  ##
  existingSecret: ""
  ## @param warpRouting Whether to enable WARP traffic routing to local subnets.
  ##
  warpRouting: false
  ## @param ingress The ingress settings to apply. Check the configuration section for examples.
  ##
  ingress:
    - hostname: "*.example.com"
      service: https://traefik.traefik-system.svc.cluster.local:443
      originRequest:
        originServerName: example.com
    - service: http_status:404