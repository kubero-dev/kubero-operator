{{- $name := .Values.name -}}

{{- if and (eq .Values.deploymentstrategy "git") (eq .Values.registry.createSecret "create") }}
{{- $dockerAuth := (printf "%s:%s" .Values.registry.username .Values.registry.password) | b64enc -}}
{{- $dockerconfigjson := (printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"auth\":\"%s\"}}}" .Values.registry.host .Values.registry.username .Values.registry.password $dockerAuth) | b64enc -}}
{{- $registryUsername := .Values.registry.username | b64enc -}}
{{- $registryPassword := .Values.registry.password | b64enc -}}

{{- range .Values.phases }}
{{- if .enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: kubero-pull-secret
  namespace: {{ $name }}-{{ .name }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ $dockerconfigjson | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: {{ $name }}-{{ .name }}
  annotations:
    app.kubernetes.io/comment: "required by trivy to scan the image"
type: Opaque
data:
  username: {{ $registryUsername | quote }}
  password: {{ $registryPassword | quote }}
{{- end }}{{/* if .enabled */}}
{{- end }}{{/* end range .Values.phases */}}
{{- end }}{{/* if and (eq .Values.deploymentstrategy "git") (eq .Values.registry.createSecret "copy") */}}